import{u as R,a as U,_ as $,b as E,c as P}from"./useFilterRows-Dkj22RlA.js";import{r as i,a as f,c as _,b as j,d as g,o as q}from"./index-7h-RjzT1.js";const x={class:"container"},B="/api/sales",V={__name:"Sales",setup(N){const u=R(),w=u.getHostUrl,b=u.getKey,r=i({}),c=f(!1);let n=i([]);const a=i({isLoading:!1,columns:[],rows:[],totalRecordCount:0}),l=f(10),{getDateWithOffset:d}=U(),v=_(()=>d()),D=_(()=>d(-7)),h=async e=>{a.isLoading=!0,c.value=!1;let s=0;e&&e/l.value>=1&&(s=Math.ceil((e+1)/l.value));try{const o=new URLSearchParams({dateFrom:D.value,dateTo:v.value,page:s,key:b,limit:l.value}),m=await fetch(`${w}${B}?${o.toString()}`);if(!m.ok)throw new Error("Failed to fetch data");const p=await m.json();n=p.data,a.rows=n,a.totalRecordCount=p.meta.total;const y=[...new Set(Object.keys(a.rows[0]))];a.columns=y.map(t=>({label:L(t),field:t,width:"3.5%",sortable:!1}));const C=a.rows.map(t=>t.barcode),F=a.rows.map(t=>t.total_price);r.labels=C,r.datasets=[{label:"Price",backgroundColor:"#f87979",data:F}],c.value=!0}catch(o){console.error("Error fetching",o)}};function L(e){return e.replace(/_([a-z])/gi,function(s,o){return o.toUpperCase()})}h(0);const k=()=>{a.isLoading=!1},S=e=>{a.isLoading=!0,a.rows=P(n,e.value,["warehouse_name","supplier_article"]),a.isLoading=!1};return(e,s)=>(q(),j("div",x,[g($,{table:a,onLoadingFinish:k,onDoSearch:h,onFilterRows:S},null,8,["table"]),g(E,{class:"chart",loaded:c.value,chartData:r},null,8,["loaded","chartData"])]))}};export{V as default};
