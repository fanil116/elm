import{u as S,a as U,_ as $,b as q,c as E}from"./useFilterRows-Dkj22RlA.js";import{r as i,a as f,c as _,b as j,d as g,o as x}from"./index-7h-RjzT1.js";const B={class:"container"},N="/api/incomes",V={__name:"Incomes",setup(O){const u=S(),w=u.getHostUrl,b=u.getKey,r=i({}),n=f(!1);let c=i([]);const a=i({isLoading:!1,columns:[],rows:[],totalRecordCount:0}),l=f(10),{getDateWithOffset:d}=U(),v=_(()=>d()),y=_(()=>d(-7)),m=async e=>{a.isLoading=!0,n.value=!1;let s=0;e&&e/l.value>=1&&(s=Math.ceil((e+1)/l.value));try{const o=new URLSearchParams({dateFrom:y.value,dateTo:v.value,page:s,key:b,limit:l.value}),h=await fetch(`${w}${N}?${o.toString()}`);if(!h.ok)throw new Error("Failed to fetch data");const p=await h.json();c=p.data,a.rows=c,a.totalRecordCount=p.meta.total;const C=[...new Set(Object.keys(a.rows[0]))];a.columns=C.map(t=>({label:D(t),field:t,width:"3.5%",sortable:!1}));const F=a.rows.map(t=>t.supplier_article),R=a.rows.map(t=>t.quantity);r.labels=F,r.datasets=[{label:"Quantity",backgroundColor:"#f87979",data:R}],n.value=!0}catch(o){console.error("Error fetching",o)}};function D(e){return e.replace(/_([a-z])/gi,function(s,o){return o.toUpperCase()})}m(0);const L=()=>{a.isLoading=!1},k=e=>{a.isLoading=!0,a.rows=E(c,e.value,["warehouse_name","supplier_article"]),a.isLoading=!1};return(e,s)=>(x(),j("div",B,[g($,{table:a,onLoadingFinish:L,onDoSearch:m,onFilterRows:k},null,8,["table"]),g(q,{class:"chart",loaded:n.value,chartData:r},null,8,["loaded","chartData"])]))}};export{V as default};
